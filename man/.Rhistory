library(np)
?npcdensbw
?npcdens
library(bkcde)
## Generate a million observations from a beta distribution, estimate the density then plot
## the results along with the true density function from which the data was drawn.
set.seed(42)
s1 <- s2 <- 1.25
n <- 1000000
n.grid <- 25
x <- runif(n,0,4)
y <- rbeta(n,s1+x,s2+x)
## Compute the optimal bandwidth vector and polynomial degree then use them in
## the call to bkcde()
optimal <- sub.cv(x=x,y=y,n.sub=250,resamples=10)
## We set proper=FALSE as the numerical integration involved when proper=TRUE can add
## unecessarily to the computation time for this DGP
f.yx.sub <- bkcde(h=optimal$h.median,degree=optimal$degree,x=x,y=y,proper=FALSE,n.grid=n.grid)
summary(f.yx.sub)
## Create a 3D plot of the estimate and the true density
par(mfrow=c(1,2))
plot(f.yx.sub,plot.3D.n.grid=n.grid,theta=120,phi=45,shade=0.5,expand=1.25,main="Estimate")
x.seq <- sort(unique(f.yx.sub$x.eval))
y.seq <- sort(unique(f.yx.sub$y.eval))
persp(x.seq,y.seq,
matrix(dbeta(f.yx.sub$y.eval,s1+f.yx.sub$x.eval,s2+f.yx.sub$x.eval),n.grid,n.grid),
theta=120,
phi=45,
ticktype="detailed",
xlab="x",
ylab="y",
zlab="f(y|x)",
shade=0.5,
expand=1.25,
main="True Density")
library(bkcde)
## Generate a million observations from a beta distribution, estimate the density then plot
## the results along with the true density function from which the data was drawn.
set.seed(42)
s1 <- s2 <- 1.25
n <- 1000000
n.grid <- 25
x <- runif(n,1,4)
y <- rbeta(n,s1+x,s2+x)
## Compute the sub-sampled bandwidth vector and polynomial degree then use them in
## the call to bkcde()
scv.out <- sub.cv(x=x,y=y,n.sub=250,resamples=10)
## We set proper=FALSE as the numerical integration involved when proper=TRUE can add
## unecessarily to the computation time for this DGP
f.yx.sub <- bkcde(h=scv.out$h.median,degree=scv.out$degree,x=x,y=y,proper=FALSE,n.grid=n.grid)
summary(f.yx.sub)
## Create a 3D plot of the estimate and the true density
par(mfrow=c(1,2))
plot(f.yx.sub,plot.3D.n.grid=n.grid,theta=120,phi=45,shade=0.5,expand=1.25,main="Estimate")
x.seq <- sort(unique(f.yx.sub$x.eval))
y.seq <- sort(unique(f.yx.sub$y.eval))
persp(x.seq,y.seq,
matrix(dbeta(f.yx.sub$y.eval,s1+f.yx.sub$x.eval,s2+f.yx.sub$x.eval),n.grid,n.grid),
theta=120,
phi=45,
ticktype="detailed",
xlab="x",
ylab="y",
zlab="f(y|x)",
shade=0.5,
expand=1.25,
main="True Density")
par(mfrow=c(1,2))
plot(f.yx.sub,
plot.3D.n.grid=n.grid,
theta=120,
phi=45,
shade=0.5,
expand=1.25,
main=paste("Estimate (n=",n,")"))
x.seq <- sort(unique(f.yx.sub$x.eval))
y.seq <- sort(unique(f.yx.sub$y.eval))
persp(x.seq,y.seq,
matrix(dbeta(f.yx.sub$y.eval,s1+f.yx.sub$x.eval,s2+f.yx.sub$x.eval),n.grid,n.grid),
theta=120,
phi=45,
ticktype="detailed",
xlab="x",
ylab="y",
zlab="f(y|x)",
shade=0.5,
expand=1.25,
main=paste("True Density (n=",n,")"))
## summary() for the bkcde() results
1e+06
options(scipen=9)
1e+06
par(mfrow=c(1,2))
options(scipen=9)
plot(f.yx.sub,
plot.3D.n.grid=n.grid,
theta=120,
phi=45,
shade=0.5,
expand=1.25,
main=paste("Estimate (n=",n,")"))
x.seq <- sort(unique(f.yx.sub$x.eval))
y.seq <- sort(unique(f.yx.sub$y.eval))
persp(x.seq,y.seq,
matrix(dbeta(f.yx.sub$y.eval,s1+f.yx.sub$x.eval,s2+f.yx.sub$x.eval),n.grid,n.grid),
theta=120,
phi=45,
ticktype="detailed",
xlab="x",
ylab="y",
zlab="f(y|x)",
shade=0.5,
expand=1.25,
main=paste("True Density (n=",n,")"))
## summary() for the bkcde() results
summary(f.yx.sub)
par(mfrow=c(1,2),cex=.8)
options(scipen=9)
plot(f.yx.sub,
plot.3D.n.grid=n.grid,
theta=120,
phi=45,
shade=0.5,
expand=1.25,
main=paste("Estimate (n =",n,")"))
x.seq <- sort(unique(f.yx.sub$x.eval))
y.seq <- sort(unique(f.yx.sub$y.eval))
persp(x.seq,y.seq,
matrix(dbeta(f.yx.sub$y.eval,s1+f.yx.sub$x.eval,s2+f.yx.sub$x.eval),n.grid,n.grid),
theta=120,
phi=45,
ticktype="detailed",
xlab="x",
ylab="y",
zlab="f(y|x)",
shade=0.5,
expand=1.25,
main=paste("True Density (n =",n,")"))
## summary() for the bkcde() results
summary(f.yx.sub)
par(mfrow=c(1,2),cex=.8)
options(scipen=9)
plot(f.yx.sub,
plot.3D.n.grid=n.grid,
theta=120,
phi=45,
shade=0.5,
expand=1.25,
main=paste("Estimate (n = ",n,")",sep=""))
x.seq <- sort(unique(f.yx.sub$x.eval))
y.seq <- sort(unique(f.yx.sub$y.eval))
persp(x.seq,y.seq,
matrix(dbeta(f.yx.sub$y.eval,s1+f.yx.sub$x.eval,s2+f.yx.sub$x.eval),n.grid,n.grid),
theta=120,
phi=45,
ticktype="detailed",
xlab="x",
ylab="y",
zlab="f(y|x)",
shade=0.5,
expand=1.25,
main=paste("True Density (n = ",n,")",sep=""))
## summary() for the bkcde() results
summary(f.yx.sub)
plot(f.yx.sub,
plot.3D.n.grid=n.grid,
theta=120,
phi=45,
shade=0.5,
expand=1.25,
progress=TRUE,
main=paste("Estimate (n = ",n,")",sep=""))
